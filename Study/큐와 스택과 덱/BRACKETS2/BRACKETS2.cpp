#include<iostream>
#include<stack>
using namespace std;

bool wellMatched(const string& formula)
{
	// 여는 괄호 문자들과 닫는 괄호 문자들
	const string opening("({["), closing(")}]");
	//이미 열린 괄호들을 순서대로 담는 스택
	stack<char> openStack;
	for (int i = 0; i < formula.size(); ++i)
	{
		if (opening.find(formula[i]) != -1)
			//여는 괄호라면 무조건 스택에 넣는다.
			openStack.push(formula[i]);
		else
		{
			//이외의 경우 스택 맨위의 문자와 맞추자
			//스택이 비어있는 경우에는 실패
			if (openStack.empty()) return false;
			//서로 맞지 않는 경우도 실패
			if (opening.find(openStack.top()) != closing.find(formula[i]))
				return false;
			//짝을 맞췄으면 스택에서 제거
			openStack.pop();
		}
	}
	//스택에 닫히지 않은 괄호가 없어야 성공
	return openStack.empty();
}

int main()
{
	cin.tie(0);
	cin.sync_with_stdio(0);
	cout.tie(0);
	
	int C; cin >> C;
	for (int i = 0; i < C; ++i)
	{
		string s; cin >> s;
		if (wellMatched(s))
			cout << "YES" << endl;
		else
			cout << "NO" << endl;
	}

	return 0;
}